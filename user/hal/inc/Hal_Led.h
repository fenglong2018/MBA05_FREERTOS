/********************************************************************** 
*  文件名称:  Hal_Led.h
*  文件描述:  按键初始化、LED初始化、按键检测、LED驱动
*  历史记录:  
*  创建时间:  2024-05-9  
*  创建人:    江昌钤
*  修改时间:	2024-8-8
*  修改人:		何凤龙
*  描述: 	  
***********************************************************************/

#ifndef _HAL_LED_H_
#define _HAL_LED_H_

/********************************************************************** 
头文件引用声明
***********************************************************************/
#include    <stdint.h>
/********************************************************************** 
宏定义
***********************************************************************/
//=====================================================================
//IO口定义
//=====================================================================
/* 故障灯				            LED_ERROR:PD8  */
#define PT_LED_ERROR		    GPIOD
#define IO_LED_ERROR		    GPIO_PINS_8

/* 电量灯1					        LED_BAT1:D7    */
#define PT_LED_BAT4		      GPIOD
#define IO_LED_BAT4		      GPIO_PINS_7

/* 电量灯2					        LED_BAT2:PD6    */
#define PT_LED_BAT3		      GPIOD
#define IO_LED_BAT3		      GPIO_PINS_6

/* 电量灯3					        LED_BAT3:PD10    */
#define PT_LED_BAT2		      GPIOD
#define IO_LED_BAT2		      GPIO_PINS_10

/* 电量灯4					        LED_BAT4:PD9    */
#define PT_LED_BAT1		      GPIOD
#define IO_LED_BAT1		      GPIO_PINS_9

#define LED_ERLED_EN()          gpio_bits_reset(PT_LED_ERROR, IO_LED_ERROR)
#define LED_ERLED_DIS()         gpio_bits_reset(PT_LED_ERROR, IO_LED_ERROR)

#define LED_BAT1_EN()           gpio_bits_set(PT_LED_BAT1, IO_LED_BAT1)
#define LED_BAT1_DIS()          gpio_bits_reset(PT_LED_BAT1, IO_LED_BAT1)

#define LED_BAT2_EN()           gpio_bits_set(PT_LED_BAT2, IO_LED_BAT2)
#define LED_BAT2_DIS()          gpio_bits_reset(PT_LED_BAT2, IO_LED_BAT2)

#define LED_BAT3_EN()           gpio_bits_set(PT_LED_BAT3, IO_LED_BAT3)
#define LED_BAT3_DIS()          gpio_bits_reset(PT_LED_BAT3, IO_LED_BAT3)

#define LED_BAT4_EN()           gpio_bits_set(PT_LED_BAT4, IO_LED_BAT4)
#define LED_BAT4_DIS()          gpio_bits_reset(PT_LED_BAT4, IO_LED_BAT4)

/********************************************************************** 
结构、枚举、公用体等结构定义
***********************************************************************/


/********************************************************************** 
源文件定义变量声明

extern 外部变量声明
***********************************************************************/

/********************************************************************** 
源文件函数声明

extern 外部函数声明
***********************************************************************/

/*----------------------------------------------------------------------------
函数名称： Hal_Led_Init
具体描述： LED初始化
----------------------------------------------------------------------------*/
void Hal_Led_Init(void);

/*----------------------------------------------------------------------------
函数名称： Hal_Bat_Led_Display_Enable
具体描述： 电量显示LED使能
输入参数： u8LedNum  要显示的LED
           u8Enable  使能
----------------------------------------------------------------------------*/
void Hal_Bat_Led_Display_Enable(uint8_t u8LedNum,uint8_t u8Enable);
/*----------------------------------------------------------------------------
函数名称： Hal_Bat_Led_Heartbeat
具体描述： 电量显示LED闪
输入参数： u8LedNum  要闪烁的LED
----------------------------------------------------------------------------*/
void Hal_Bat_Led_Heartbeat(uint8_t u8LedNum);
/*----------------------------------------------------------------------------
函数名称： Hal_Error_Led_Display_Enable
具体描述： 告警显示LED使能
输入参数： u8Enable  使能
----------------------------------------------------------------------------*/
void Hal_Error_Led_Display_Enable(uint8_t u8Enable);
/*----------------------------------------------------------------------------
函数名称： Hal_Get_LDR1Key_State
具体描述： 告警显示LED使能
输入参数： u8Enable  使能
----------------------------------------------------------------------------*/
uint8_t Hal_Get_LDR1Key_State(void);
/*----------------------------------------------------------------------------
函数名称： Hal_Get_LDR2Key_State
具体描述： 告警显示LED使能
输入参数： u8Enable  使能
----------------------------------------------------------------------------*/
uint8_t Hal_Get_LDR2Key_State(void);
/*----------------------------------------------------------------------------
函数名称： Hal_Get_FalldownKey_State
具体描述： 获取倾覆开关状态
输出参数： 1 按下   
           0 弹开
----------------------------------------------------------------------------*/
uint8_t Hal_Get_FalldownKey_State(void);
#endif
